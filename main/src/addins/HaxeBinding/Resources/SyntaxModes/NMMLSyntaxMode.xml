<SyntaxMode name = "Xml" mimeTypes="text/x-nmml">
	
	<Property name="BlockCommentStart">&lt;!--</Property>
	<Property name="BlockCommentEnd">--&gt;</Property>
	<Property name="StringQuote">"</Property>
	<Property name="StringQuote">'</Property>
	
	<Span color = "comment" rule = "Comment">
		<Begin>&lt;!--</Begin>
		<End>--&gt;</End>
	</Span>
	
	<Span color = "text.preprocessor" rule = "Comment">
		<Begin>&amp;</Begin>
		<Exit flags="CancelSpan"> |	</Exit>
		<End>;</End>
	</Span>
	
	<Span tagColor = "keyword.declaration" color = "text.markup" rule = "InTag">
		<Begin>&lt;!DOCTYPE</Begin>
		<End>&gt;</End>
	</Span>
	
	<Span tagColor = "keyword.exceptions" color = "comment" rule = "Comment">
		<Begin>&lt;![CDATA[</Begin>
		<End>]]&gt;</End>
	</Span>
	
	<Span color = "text.markup" rule = "InJavascript" >
		<Begin>&lt;script</Begin>
		<End>&lt;/script&gt;</End>
	</Span>
	
	<!-- processing instructions -->
	<Span tagColor = "keyword.declaration" color = "text.markup" rule = "InTag">
		<Begin>&lt;?</Begin>
		<End>?&gt;</End>
	</Span>
	
	
	<!-- Known Tags -->
	
	<!-- Is there a better way to do this? -->
	
	<Span color="text.markup" rule="InMetaNode">
		<Begin>&lt;meta</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InMetaNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>title</Word>
			<Word>description</Word>
			<Word>package</Word>
			<Word>version</Word>
			<Word>company</Word>
		</Keywords>	
	</Rule>
	
	<Span color="text.markup" rule="InAppNode">
		<Begin>&lt;app</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InAppNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>main</Word>
			<Word>file</Word>
			<Word>path</Word>
			<Word>preloader</Word>
			<Word>swf-version</Word>
		</Keywords>	
	</Rule>
	
	<Span color="text.markup" rule="InWindowNode">
		<Begin>&lt;window</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InWindowNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>width</Word>
			<Word>height</Word>
			<Word>background</Word>
			<Word>orientation</Word>
			<Word>fps</Word>
			<Word>resizable</Word>
			<Word>borderless</Word>
			<Word>vsync</Word>
			<Word>fullscreen</Word>
			<Word>antialiasing</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InSourceNode">
		<Begin>&lt;source</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InSourceNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>path</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InHaxelibNode">
		<Begin>&lt;haxelib</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InHaxelibNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>name</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InNDLLNode">
		<Begin>&lt;ndll</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InNDLLNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>name</Word>
			<Word>haxelib</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InIncludeNode">
		<Begin>&lt;include</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InIncludeNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>path</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InIconNode">
		<Begin>&lt;icon</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InIconNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>path</Word>
			<Word>width</Word>
			<Word>height</Word>
			<Word>size</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InAssetsNode">
		<Begin>&lt;assets</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InAssetsNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>path</Word>
			<Word>include</Word>
			<Word>exclude</Word>
			<Word>rename</Word>
			<Word>type</Word>
			<Word>name</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InAssetsNode">
		<Begin>&lt;asset</Begin>
		<End>&gt;</End>
	</Span>
	<Span color="text.markup" rule="InAssetsNode">
		<Begin>&lt;image</Begin>
		<End>&gt;</End>
	</Span>
	<Span color="text.markup" rule="InAssetsNode">
		<Begin>&lt;sound</Begin>
		<End>&gt;</End>
	</Span>
	<Span color="text.markup" rule="InAssetsNode">
		<Begin>&lt;music</Begin>
		<End>&gt;</End>
	</Span>
	<Span color="text.markup" rule="InAssetsNode">
		<Begin>&lt;font</Begin>
		<End>&gt;</End>
	</Span>
	<Span color="text.markup" rule="InAssetsNode">
		<Begin>&lt;template</Begin>
		<End>&gt;</End>
	</Span>
	
	<Span color="text.markup" rule="InLibraryNode">
		<Begin>&lt;library</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InLibraryNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>path</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InSetNode">
		<Begin>&lt;set</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InSetNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>name</Word>
			<Word>value</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InUnsetNode">
		<Begin>&lt;unset</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InUnsetNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>name</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InHaxeflagNode">
		<Begin>&lt;haxeflag</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InHaxeflagNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>name</Word>
			<Word>value</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InHaxedefNode">
		<Begin>&lt;haxedef</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InHaxedefNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>name</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InSetenvNode">
		<Begin>&lt;setenv</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InSetenvNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>name</Word>
			<Word>value</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InJavaNode">
		<Begin>&lt;java</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InJavaNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>path</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InCertificateNode">
		<Begin>&lt;certificate</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InCertificateNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>path</Word>
			<Word>password</Word>
			<Word>alias</Word>
			<Word>alias-password</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InIosNode">
		<Begin>&lt;ios</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InIosNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>deployment</Word>
			<Word>binaries</Word>
			<Word>devices</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InDependencyNode">
		<Begin>&lt;dependency</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InDependencyNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>name</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InPathNode">
		<Begin>&lt;path</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InPathNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>value</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InErrorNode">
		<Begin>&lt;error</Begin>
		<End>&gt;</End>
	</Span>
	<Rule name="InErrorNode">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<Keywords color="keyword.type">
			<Word>if</Word>
			<Word>unless</Word>
			<Word>value</Word>
		</Keywords>
	</Rule>
	
	<Span color="text.markup" rule="InTag">
		<Begin>&lt;section</Begin>
		<End>&gt;</End>
	</Span>
	
	
	
	<Span color="text.markup" rule = "InTag">
		<Begin>&lt;</Begin>
		<End>&gt;</End>
	</Span>
	
	<Rule name = "Comment">
	</Rule>
	
	
	<Rule name = "InTag">
		<Span color = "string" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		
		<Span color = "string" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		
		
		<Keywords color="text.markup">
			<Word>app</Word>
			<Word>window</Word>
			<Word>source</Word>
			<Word>haxelib</Word>
			<Word>ndll</Word>
			<Word>include</Word>
			<Word>icon</Word>
			<Word>assets</Word>
			<Word>sound</Word>
			<Word>music</Word>
			<Word>asset</Word>
			<Word>font</Word>
			<Word>image</Word>
			<Word>template</Word>
			<Word>library</Word>
			<Word>set</Word>
			<Word>unset</Word>
			<Word>haxeflag</Word>
			<Word>haxedef</Word>
			<Word>section</Word>
			<Word>setenv</Word>
			<Word>java</Word>
			<Word>certificate</Word>
			<Word>ios</Word>
			<Word>dependency</Word>
			<Word>path</Word>
			<Word>error</Word>
			<Word>section</Word>
			<Word>project</Word>
		</Keywords>
	</Rule>
	
	
	
	<Rule name = "InLiteral">
		<Span color = "text.preprocessor">
			<Begin>&amp;</Begin>
			<End>;</End>
		</Span>
	</Rule>
	
</SyntaxMode>
